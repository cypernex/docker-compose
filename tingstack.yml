version: '3'

services:
  # Define a Telegraf service
  telegraf:
    image: telegraf:latest
    network_mode: bridge
    volumes:
      - /home/ec2-user/smartsite/telegraf/etc/telegraf:/etc/telegraf
    user: root
    links:
      - influxdb
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"
    restart: always
  # Define an InfluxDB service
  influxdb:
    image: quay.io/influxdb/influx:nightly
    network_mode: bridge
    volumes:
      - /home/ec2-user/smartsite/influxdb-export-test/root/.influxdbv2:/root/.influxdbv2
    user: root
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_USERNAME='admin'
      - DOCKER_INFLUXDB_INIT_PASSWORD='adminadmin'
      - DOCKER_INFLUXDB_INIT_ORG='cypernex'
      - DOCKER_INFLUXDB_INIT_BUCKET='all data'
    restart: always
  grafana:
    image: grafana/grafana:latest
    network_mode: bridge
    links:
      - influxdb
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - /home/ec2-user/smartsite/grafana/var/lib/grafana:/var/lib/grafana
      - /home/ec2-user/smartsite/grafana/etc/grafana:/etc/grafana
    user: root
    restart: always
    
  node-red:
    image: nodered/node-red:latest
    command: npm install node-red-contrib-digitaloak-mqtt
    command: npm install node-red-contrib-loop-processing
    command: npm install node-red-contrib-redis
    command: npm install node-red-dashboard
    ports:
      - "1880:1880"
    volumes:
      - /home/ec2-user/smartsite/node-red/data:/data
    restart: always

# Explicitly define the persistent volume for your data storage
#volumes:
#  grafana-data:

#  telegraf-data:
  
#  influxdb-data:
